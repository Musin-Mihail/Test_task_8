# Unity YAML merge driver
# This tells Git to use the UnityYAMLMerge tool when merging .unity, .prefab, .asset, and .meta files.
# This is crucial for collaborative Unity development to prevent merge conflicts in these files.
*.unity  merge=unityyamlmerge text
*.prefab merge=unityyamlmerge text
*.asset  merge=unityyamlmerge text
*.meta   merge=unityyamlmerge text

# End-of-line (EOL) normalization
# Ensures consistent line endings across different operating systems.
# 'text eol=lf' forces LF line endings for text files, which is common in development.
*.cs     text eol=lf
*.shader text eol=lf
*.txt    text eol=lf
*.md     text eol=lf
*.json   text eol=lf
*.xml    text eol=lf

# Mark common binary files as such
# Tells Git not to try to diff or merge these files, as they are binary.
*.png binary
*.jpg binary
*.jpeg binary
*.gif binary
*.tga binary
*.bmp binary
*.psd binary
*.tif binary
*.tiff binary
*.dds binary
*.exr binary

*.mp3 binary
*.wav binary
*.ogg binary
*.aiff binary

*.fbx binary
*.obj binary
*.blend binary
*.max binary
*.mb binary
*.ma binary
*.spp binary

*.dll binary
*.exe binary
*.pdf binary

# Optional: Large File Storage (LFS) for very large binary assets
# If you have very large assets (e.g., high-res textures, huge audio files, complex models)
# that significantly bloat your repository size, consider using Git LFS.
# This requires Git LFS to be installed and tracked.
# For example:
# *.psd filter=lfs diff=lfs merge=lfs -text
# *.mp4 filter=lfs diff=lfs merge=lfs -text